name: CI

on:
  push:
    paths-ignore:
      - .editorconfig
      - .gitattributes
      - .gitignore
      - docs/**
      - README.md
  pull_request:
    paths-ignore:
      - .editorconfig
      - .gitattributes
      - .gitignore
      - docs/**
      - README.md

jobs:
  build-php:
    name: Build PHP
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions:
          - '7.3'
          - '7.4'
          - '8.0'
          - '8.1'
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Setup PHP version
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: curl json mbstring
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install composer dependencies for PHP <= 8.0
        if: matrix.php-versions <= '8.0'
        run: |
          composer remove --dev infection/infection --no-progress
      - name: Install composer dependencies for PHP 8.1
        if: matrix.php-versions == '8.1'
        run: |
          composer config platform.php 8.0 && composer remove --dev infection/infection --no-progress
      - name: Run PHP linter
        run: |
          find . -name \*.php  ! -path "./vendor/*" -exec php -l {} \;
      - name: Run unit tests
        run: |
          make tests
  sonar-cloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: SonarCloud scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Setup PHP version
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          coverage: xdebug
          extensions: curl json mbstring
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install composer dependencies
        run: |
          composer update --no-progress --prefer-dist --optimize-autoloader
      - name: Normalize composer.json
        run: |
          composer normalize --dry-run
      - name: Check coding standards
        run: |
          vendor/bin/ecs check --no-progress-bar
      - name: Generate code coverage
        run: |
          make tests
      - name: Send code coverage report to coveralls.io
        run: |
          make code-coverage
        env:
          COVERALLS_RUN_LOCALLY: 1
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      - name: Run mutation tests
        run: |
          make mutation-tests
        env:
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
      - name: Run phpstan
        run: |
          make phpstan
      - name: Run rector
        run: |
          make rector-dry
